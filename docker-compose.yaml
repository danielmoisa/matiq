services:
  postgres:
    image: postgres:15
    container_name: matiq-postgres
    environment:
      POSTGRES_DB: matiq
      POSTGRES_USER: matiq
      POSTGRES_PASSWORD: matiq2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - matiq-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U matiq -d matiq"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Separate PostgreSQL for Keycloak
  keycloak-postgres:
    image: postgres:15
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5436:5432"  # Different port
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - matiq-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: matiq-redis
    ports:
      - "6375:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - matiq-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: matiq-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9005:9000"
      - "9006:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - matiq-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: matiq-keycloak
    environment:
      # Database configuration - Connect to separate Keycloak PostgreSQL
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak2025
      
      # Keycloak admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      
      # Development settings
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8888:8080"
    command: 
      - start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - matiq-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
  keycloak_postgres_data:  # Add separate volume for Keycloak DB
  redis_data:
  minio_data:
  keycloak_data:

networks:
  matiq-network:
    driver: bridge