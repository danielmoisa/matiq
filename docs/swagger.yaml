basePath: /api/v1
definitions:
  github_com_danielmoisa_auto-runner_internal_driver_keycloak.TokenInfo:
    properties:
      claims:
        additionalProperties: true
        type: object
      email:
        type: string
      enabled:
        type: boolean
      roles:
        items:
          type: string
        type: array
      user_id:
        type: string
      username:
        type: string
      valid:
        type: boolean
    type: object
  internal_controller.AuthenticationData:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
      user:
        $ref: '#/definitions/internal_controller.UserInfo'
    type: object
  internal_controller.ErrorResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  internal_controller.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  internal_controller.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/internal_controller.AuthenticationData'
      message:
        type: string
      success:
        type: boolean
    type: object
  internal_controller.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_controller.ProfileResponse:
    properties:
      data:
        $ref: '#/definitions/internal_controller.UserInfo'
      message:
        type: string
      success:
        type: boolean
    type: object
  internal_controller.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_controller.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  internal_controller.SuccessResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  internal_controller.UserInfo:
    properties:
      email:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  internal_controller.ValidateTokenResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_danielmoisa_auto-runner_internal_driver_keycloak.TokenInfo'
      message:
        type: string
      success:
        type: boolean
      valid:
        type: boolean
    type: object
host: localhost:8001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing automation workflows and tasks.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Auto Runner Automation API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
      summary: User login
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and invalidate tokens
      parameters:
      - description: Refresh token to invalidate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_controller.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
      summary: User logout
      tags:
      - auth
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Get current authenticated user profile
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.ProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
      summary: Get user profile
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh an expired access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_controller.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_controller.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_controller.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
      summary: User registration
      tags:
      - auth
  /auth/validate:
    get:
      consumes:
      - application/json
      description: Validate a JWT access token
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.ValidateTokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controller.ErrorResponse'
      summary: Validate access token
      tags:
      - auth
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
